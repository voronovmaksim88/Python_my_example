import random


def calculate_pi(n):
    inside_circle = 0

    for _ in range(n):
        x = random.random()
        y = random.random()

        if x ** 2 + y ** 2 <= 1:
            inside_circle += 1

    return 4 * inside_circle / n


# Пример использования
n = 1000000  # Количество итераций
pi_estimate = calculate_pi(n)
print(f'Приблизительное значение числа Пи: {pi_estimate}')

"""
Как работает этот метод?
Метод Монте-Карло основывается на случайном выборе точек внутри квадрата со стороной 1.
Если точка попадает внутрь вписанного круга радиусом 1, то она считается «внутри круга». 
Соотношение количества таких точек к общему количеству попыток стремится к отношению площади круга к площади квадрата
Умножив это отношение на 4, мы получаем приближённое значение числа π.
Чем больше количество итераций (n), тем точнее будет результат.
"""