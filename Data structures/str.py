# Учимся работать со строками
my_str = "abcdef"
print(my_str)

"""
В Python 3 встроена специальная функция reversed(),
в качестве аргумента она принимает список или строку,
а возвращает итератор последовательности значений,
cостоящей из всех элементов аргумента в обратном порядке.

Простыми словами - недостаточно написать res = reversed(variable),
данные нужно преобразовать в нужный тип (в нашем случае - в строку).
Сделать мы это можем при помощи метода join(), соединив последовательность через пустую строку.
"""
my_str = "".join(reversed(my_str))  # реверсируем строку
print(my_str)  # выводим реверсированную строку

print(" \" ")  # экранируем пару двойных кавычек

print(" привет, \n пока ")  # экранируем пару двойных кавычек
# \n — это пример экранированной последовательности (escape sequence).
# Такие последовательности еще называют управляющими конструкциями.
# Их нельзя увидеть в том же виде, в котором их набрали.

"""
Задание
Напишите программу, которая выводит на экран:

- Did Joffrey agree?
- He did. He also said "I love using \n".
При этом программа использует только один print(), но результат на экране должен выглядеть в точности,
как показано выше.
"""


print("- Did Joffrey agree?\n- He did. He also said \"I love using \\n\".")
